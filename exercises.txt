Exercise 1
==========
statements:

mysql-ctl start
mysql -u philraj
(ran find/replace inside import-table-structure.sql, then saved as...)
source data/import-table-structure2.sql


Exercise 2
==========
use decodemtl_addressbook;
insert into Account value(null, 'test@email.com', 'abc123', '2016-02-08 16:53:50', '2016-02-08 16:53:50');  
insert into AddressBook value(null, 1, 'Phil Rajchgot', '2016-02-08 16:59:40', null);
insert into Entry value(null, 1, 'Paul', 'Allen', null, 'work', 'phone', '555-9876', null, null, null, null);
insert into Entry value(null, 1, 'Paul', 'Allen', null, 'home', 'phone', '555-1234', null, null, null, null);                                                                  
insert into Entry value(null, 1, 'Paul', 'Allen', null, 'work', 'address', '123 Fake Real St, Manhattan, NY, USA', null, null, null, null);                                    


Exercise 3
==========
select * from Account;
select * from AddressBook;
select * from Entry;

+----+----------------+----------+---------------------+---------------------+
| id | email          | password | createdOn           | modifiedOn          |
+----+----------------+----------+---------------------+---------------------+
|  1 | test@email.com | abc123   | 2016-02-08 16:53:50 | 2016-02-08 16:53:50 |
+----+----------------+----------+---------------------+---------------------+

+----+----------------+----------+---------------------+---------------------+
| id | email          | password | createdOn           | modifiedOn          |
+----+----------------+----------+---------------------+---------------------+
|  1 | test@email.com | abc123   | 2016-02-08 16:53:50 | 2016-02-08 16:53:50 |
+----+----------------+----------+---------------------+---------------------+

+----+---------------+-----------+----------+----------+------+---------+--------------------------------------+----------------+------------------+-----------------+-----------------+
| id | addressBookId | firstName | lastName | birthday | type | subtype | contentLineOne                       | contentLineTwo | contentLineThree | contentLineFour | contentLineFive |
+----+---------------+-----------+----------+----------+------+---------+--------------------------------------+----------------+------------------+-----------------+-----------------+
|  1 |             1 | Paul      | Allen    | NULL     | work | phone   | 555-9876                             | NULL           | NULL             | NULL            | NULL            |
|  2 |             1 | Paul      | Allen    | NULL     | home | phone   | 555-1234                             | NULL           | NULL             | NULL            | NULL            |
|  3 |             1 | Paul      | Allen    | NULL     | work | address | 123 Fake Real St, Manhattan, NY, USA | NULL           | NULL             | NULL            | NULL            |
+----+---------------+-----------+----------+----------+------+---------+--------------------------------------+----------------+------------------+-----------------+-----------------+


Exercise 4
==========
update Account SET email='test2@newemail.net', password='789xyz', modifiedOn='2016-02-08 17:20:13';
update AddressBook SET name='Associates', modifiedOn=NOW();
UPDATE `Entry` SET firstName='Patrick', lastName='Bateman' WHERE addressBookId=1;


Exercise 5
==========
TRUNCATE Entry;


Exercise 6
==========
DELETE FROM Account;


Exercise 7
==========
source data/import-table-structure.sql;
use decodemtl_addressbook_import;
source data/import-account.sql;
source data/import-addressbook.sql;
source data/import-entry.sql;



Exercise 8
==========
select email from Account where id=63;
+-------------------------------------------------+
| email                                           |
+-------------------------------------------------+
| consectetuer.rhoncus.Nullam@temporloremeget.org |
+-------------------------------------------------+

select name from AddressBook where id=3;
+--------------------+
| name               |
+--------------------+
| Donec Incorporated |
+--------------------+

select createdOn from AddressBook where name="Lorem Foundation";
+---------------------+
| createdOn           |
+---------------------+
| 2016-06-26 02:43:41 |
| 2015-05-04 14:28:16 |
+---------------------+



Exercise 9
==========
select count(*) from Account;
+----------+
| count(*) |
+----------+
|     1000 |
+----------+

select count(*) from AddressBook;
+----------+
| count(*) |
+----------+
|     1100 |
+----------+

select count(*) from Entry;
+----------+
| count(*) |
+----------+
|     4000 |
+----------+



Exercise 10
===========
select count(*) from Entry WHERE birthday < '1982-02-12';                                                                                                                  
+----------+
| count(*) |
+----------+
|     2687 |
+----------+

select count(*) from Entry WHERE birthday >= '1965-01-01';
+----------+
| count(*) |
+----------+
|     2597 |
+----------+

select * from Entry where birthday = (select MIN(birthday) from Entry);
+------+---------------+-----------+----------+---------------------+-------+---------+----------------+----------------+------------------+-----------------+-----------------+
| id   | addressBookId | firstName | lastName | birthday            | type  | subtype | contentLineOne | contentLineTwo | contentLineThree | contentLineFour | contentLineFive |
+------+---------------+-----------+----------+---------------------+-------+---------+----------------+----------------+------------------+-----------------+-----------------+
| 2260 |            93 | Abigail   | Rollins  | 1945-09-02 09:21:58 | other | address | 194 Non Road   | Berlin         | Berlin           | Bolivia         | 791155          |
+------+---------------+-----------+----------+---------------------+-------+---------+----------------+----------------+------------------+-----------------+-----------------+



Exercise 11
===========
select count(*) from Entry where NOT type='other';
+----------+
| count(*) |
+----------+
|     2800 |
+----------+

select count(*) from Entry where type="home" OR type="work";
+----------+
| count(*) |
+----------+
|     2800 |
+----------+

select count(*) from Entry where subtype="phone";
+----------+
| count(*) |
+----------+
|      600 |
+----------+



Exercise 12
===========
set @maxCounts = (select MAX(`count(*)`) from  (select count(*), `accountId` from AddressBook group by `accountId`) as test);
select * from (select count(*), `accountId` from AddressBook group by `accountId`) as test1 where `count(*)` = @maxCounts;
+----------+-----------+
| count(*) | accountId |
+----------+-----------+
|       19 |         5 |
|       19 |        14 |
+----------+-----------+

select * from (select `addressBookId`, count(*) from Entry group by `addressBookId`) as temp1 where `count(*)` = (select MAX(`count(*)`) from (select `addressBookId`, count(*) from Entry group by `addressBookId`) as temp2);
+---------------+----------+
| addressBookId | count(*) |
+---------------+----------+
|            37 |       52 |
+---------------+----------+
(what a mouth full)



Exercise 13
===========
select count(*) from (select contentLineOne from Entry where subtype='phone' AND (contentLineOne LIKE '1-3%' OR contentLineOne LIKE '(3%' )) as numbers;
+----------+
| count(*) |
+----------+
|       60 |
+----------+

select count(*) from (select * from Entry where type='home' AND subtype='phone' AND contentLineOne NOT LIKE '%5%') as entries;
+----------+
| count(*) |
+----------+
|       76 |
+----------+

select count(*) from (select * from Entry where type="work" AND subtype="phone" AND contentLineOne RLIKE "^[0-9]-") as phones;
+----------+
| count(*) |
+----------+
|       60 |
+----------+



Exercise 14
===========
select * from items left join invoices on items.invoiceId = invoices.id where name='winter coat' AND stockDate < NOW() AND (transactionDate > NOW() OR transactionDate IS null);   
+----+-------------+--------------+--------+------------------+---------------------+-----------+-----------+------+------------+-------------+---------------------+---------+
| id | name        | manufacturer | price  | transactionPrice | stockDate           | itemState | invoiceId | id   | customerId | cashierName | transactionDate     | total   |
+----+-------------+--------------+--------+------------------+---------------------+-----------+-----------+------+------------+-------------+---------------------+---------+
|  6 | winter coat | canada goose | 649.99 |           649.99 | 2016-02-09 20:25:54 | sold      |         2 |    2 |          2 | George      | 2017-02-09 00:00:00 | 1000650 |
|  7 | winter coat | canada goose | 649.99 |             NULL | 2016-02-09 20:08:09 | available |      NULL | NULL |       NULL | NULL        | NULL                |    NULL |
+----+-------------+--------------+--------+------------------+---------------------+-----------+-----------+------+------------+-------------+---------------------+---------+

// ^- this shows all the items with this name which were stocked before NOW() but sold AFTER now(), meaning the item was in stock on this date